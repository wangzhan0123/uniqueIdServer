<?xml version="1.0" encoding="UTF-8"?>

<!--
    status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出
    monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。
-->
<Configuration status="WARN" monitorInterval="60">

    <Properties>
        <!-- 配置日志文件输出目录 -->
        <Property name="LOG_HOME" value="/logs/log4j2"/>
        <Property name="FILE_SIZE_CUT" vaule="200M" />
    </Properties>
	
    <Appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%T] [%-5level] %c{1.}:%L - %msg%n"/>
        </Console>

        <!-- DEBUG日志格式 -->
        <RollingRandomAccessFile name="debug_appender"
                                 immediateFlush="false" fileName="${LOG_HOME}/debug.log"
                                 filePattern="${LOG_HOME}/debug.log.%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
               <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%T] [%-5level] %c{1.}:%L - %msg%n</pattern> 
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${FILE_SIZE_CUT}"/>
            </Policies>
            <Filters>
            	<ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
        </RollingRandomAccessFile>
        <!-- INFO日志格式 -->
        <RollingRandomAccessFile name="info_appender"
                                 immediateFlush="false" fileName="${LOG_HOME}/info.log"
                                 filePattern="${LOG_HOME}/info.log.%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%T] [%-5level] %c{1.}:%L - %msg%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${FILE_SIZE_CUT}"/>
            </Policies>
            <Filters>
            	<ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
        </RollingRandomAccessFile>
        <!-- WARN日志格式 -->
        <RollingRandomAccessFile name="warn_appender"
                                 immediateFlush="false" fileName="${LOG_HOME}/warn.log"
                                 filePattern="${LOG_HOME}/warn.log.%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%T] [%-5level] %c{1.}:%L - %msg%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${FILE_SIZE_CUT}"/>
            </Policies>
            <Filters>
            	<ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
        </RollingRandomAccessFile>
        <!-- error日志格式 -->
        <RollingRandomAccessFile name="error_appender"
                                 immediateFlush="false" fileName="${LOG_HOME}/error.log"
                                 filePattern="${LOG_HOME}/error.log.%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%T] [%-5level] %c{1.}:%L - %msg%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="${FILE_SIZE_CUT}"/>
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
        </RollingRandomAccessFile>
    </Appenders>

    <Loggers>
        <!-- 配置日志的根节点 
        <root level="debug">
            <appender-ref ref="Console"/>
            <appender-ref ref="debug_appender"/>
            <appender-ref ref="info_appender"/>
            <appender-ref ref="warn_appender"/>
            <appender-ref ref="error_appender"/>
        </root>
        -->
        <!-- 混合模式 -->
   		 <asyncRoot level="trace" includeLocation="true">  
       		<appender-ref ref="debug_appender"/>
            <appender-ref ref="info_appender"/>
            <appender-ref ref="warn_appender"/>
            <appender-ref ref="error_appender"/>  
       		<appender-ref ref="Console" />
    	</asyncRoot>    
     	
        <!-- 日志实例(debug),其中'xx-log'继承root,但是root将日志输出控制台,而'xx-log'将日志输出到文件,通过属性'additivity="false"'将'xx-log'的
             的日志不再输出到控制台 
        6个级别，级别由低到高分别为trace < debug <info < warn < error < fatal
        <logger name="info_log" level="info" includeLocation="true" additivity="false">
            <appender-ref ref="info_appender"/>
        </logger>
        -->
    </Loggers>

</Configuration>